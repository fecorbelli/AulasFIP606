{
  "hash": "e377f94cfe26a5348222943e9c998fc6",
  "result": {
    "markdown": "---\ntitle: \"Aula2\"\nformat: html\neditor: visual\nmessage: false\nwarning: false\n---\n\n\n# Importando dados\n\n## Pacotes\n\nAlguns pacotes apresentam diferentes conjuntos de dados que podem ser utilizados. Para utilizá-los, basta baixar o pacote, ativar o mesmo e criar um objeto com o conjunto de dados do pacote que você quer trabalhar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ec50estimator)\ndf1 <- multi_isolate\n```\n:::\n\n\n## Arquivo Excel\n\nPara a importação de dados que estão em um arquivo excel devemos utilizar a função read_excel do pacote readxl. O comando será: read_excel(\"nome do arquivo\").\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\ndf2 <- read_excel(\"dados-diversos.xlsx\")\ndf21 <- read_excel(\"dados-diversos.xlsx\",sheet = \"armazena\")\n```\n:::\n\n\n## Arquivo CSV\n\nPara a importação de dados que estão em um arquivo csv utilizamos a função read_csv do pacote tidyverse. O comando será: read_csv(\"nome do arquivo\").\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndf3 <- read_csv(\"dados-diversos.csv\")\n```\n:::\n\n\n## Planilha Google\n\nPara a importação de dados que estão em uma planilha google utilizamos a função gsheet2tbl do pacote gsheet. O comando será: gsheet2tb1(\"endereço na web\").\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\ndf4 <- gsheet2tbl (\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827\")\n```\n:::\n\n\n# Visualização de Dados\n\n## Gráficos em ggplot\n\nPodemos utilizar a biblioteca ggplot2 para vizualizar dados. A função necessária nesse caso é a ggplot. A programação de gráficos em ggplot2 é feito na forma de camadas, que são adicionadas à medida que se confecciona o gráfico.\n\nA função `geom_jitter()` irá criar um gráfico de pontos, sendo que esses pontos serão plotados de forma dispersa para não haver sobreposição de dados. Já a função `geom_boxplot()` irá criar um gráfico do tipo boxplot com os dados. Utilizamos \"color =\" para definir a coloração dos pontos, \"shape =\" para definir o formato e \"size =\" para definir o tamanho. A função `outlier.colour = NA`é utilizada para que os pontos outlier não apareçam no boxplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\ndf4 %>% \n  ggplot(aes(especie,tcm))+\n  geom_jitter(width = 0.05, color = \"black\", shape = 2, size = 3)+\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Aula2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\ng2 <- df4 %>% \n  ggplot(aes(especie,tcm))+\n  geom_boxplot(outlier.colour = NA, fill = \"green\")+\n  geom_jitter(width = 0.05, color = \"black\", shape = 2, size = 3)\n```\n:::\n\n\nPara adicionar anotações ao gráfico utilizamos a função `labs()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng2 + theme_classic() + labs(x=\"tratamento\", y= \"comprimento (nm)\", title= \"meu primeiro ggplot\", caption=\"fonte: Dados diversos\") + scale_y_continuous(limits = c(0,2))\n```\n\n::: {.cell-output-display}\n![](Aula2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\ng2 + theme_classic() + labs(x=\"tratamento\", y= \"comprimento (nm)\", title= \"meu primeiro ggplot\", caption=\"fonte: Dados diversos\") + ylim(0,1.5)\n```\n\n::: {.cell-output-display}\n![](Aula2_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\nPara salvar o gráfico, utilizamos a função `ggsave()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"plot1.png\", bg= \"white\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}