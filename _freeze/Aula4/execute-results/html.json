{
  "hash": "1588d32bf964223d48c49a287a110216",
  "result": {
    "markdown": "---\ntitle: \"Aula4\"\nformat: html\neditor: visual\nmessage: false\nwarning: false\n---\n\n\n# Usando datapasta\n\nO comando **datapasta** permite copiar vetores de outros locais e colar diretamente no programa. As opções de colagem se encontram no menu \"Addins\".\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-1_c9aaf9d891471fda882f9acb3097b47c'}\n\n```{.r .cell-code}\ndat <- data.frame(\n  stringsAsFactors = FALSE,\n              trat = c(\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\n                       \"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"control\",\n                       \"control\",\"control\",\"control\",\"control\",\"control\",\"control\",\n                       \"control\",\"control\",\"control\"),\n               rep = c(1L,2L,3L,4L,5L,6L,7L,8L,\n                       9L,10L,1L,2L,3L,4L,5L,6L,7L,8L,9L,10L),\n              comp = c(9,125,10,8,132,11,108,95,\n                       108,104,1372,1591,157,142,159,1654,18,144,\n                       1641,16))\n\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      trat rep comp\n1      Mg2   1    9\n2      Mg2   2  125\n3      Mg2   3   10\n4      Mg2   4    8\n5      Mg2   5  132\n6      Mg2   6   11\n7      Mg2   7  108\n8      Mg2   8   95\n9      Mg2   9  108\n10     Mg2  10  104\n11 control   1 1372\n12 control   2 1591\n13 control   3  157\n14 control   4  142\n15 control   5  159\n16 control   6 1654\n17 control   7   18\n18 control   8  144\n19 control   9 1641\n20 control  10   16\n```\n:::\n:::\n\n\nExemplo utilizando os dados da tabela \"dados.diversos\" e o comando \"paste as tribble\".\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-2_587922d9a300b208c314ac924215e709'}\n\n```{.r .cell-code}\ndat2 <- tibble::tribble(\n              ~trat, ~rep, ~comp,\n              \"Mg2\",   1L,     9,\n              \"Mg2\",   2L,   125,\n              \"Mg2\",   3L,    10,\n              \"Mg2\",   4L,     8,\n              \"Mg2\",   5L,   132,\n              \"Mg2\",   6L,    11,\n              \"Mg2\",   7L,   108,\n              \"Mg2\",   8L,    95,\n              \"Mg2\",   9L,   108,\n              \"Mg2\",  10L,   104,\n          \"control\",   1L,  1372,\n          \"control\",   2L,  1591,\n          \"control\",   3L,   157,\n          \"control\",   4L,   142,\n          \"control\",   5L,   159,\n          \"control\",   6L,  1654,\n          \"control\",   7L,    18,\n          \"control\",   8L,   144,\n          \"control\",   9L,  1641,\n          \"control\",  10L,    16\n          )\n\ndat2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 3\n   trat      rep  comp\n   <chr>   <int> <dbl>\n 1 Mg2         1     9\n 2 Mg2         2   125\n 3 Mg2         3    10\n 4 Mg2         4     8\n 5 Mg2         5   132\n 6 Mg2         6    11\n 7 Mg2         7   108\n 8 Mg2         8    95\n 9 Mg2         9   108\n10 Mg2        10   104\n11 control     1  1372\n12 control     2  1591\n13 control     3   157\n14 control     4   142\n15 control     5   159\n16 control     6  1654\n17 control     7    18\n18 control     8   144\n19 control     9  1641\n20 control    10    16\n```\n:::\n:::\n\n\nExemplo utilizando o comando \"paste as tribble\" a partir de dados disponíveis em uma página na internet.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-3_71b5acdc113b0fed75f9afbf36d08185'}\n\n```{.r .cell-code}\npop <- tibble::tribble(\n  ~`Pos.\tPaís\tPopulação\tÁrea.(km²)\tDensidade.(habitantes.por.km²)`,\n                                \"0\\t Macau\\t649 335\\t28,6\\t22 402\",\n                                \"1\\t Mônaco\\t37 308\\t2,02\\t18 713\",\n                 \"2\\tSingapura Singapura\\t5 638 700\\t716,1\\t7 874\",\n                          \"3\\t Hong Kong\\t7 184 000\\t1 104\\t6 544\",\n                                  \"4\\t Vaticano\\t825\\t0,49\\t1 891\",\n                                  \"5\\t Malta\\t417 617\\t316\\t1 321\",\n                               \"6\\t Maldivas\\t427 756\\t300\\t1 426\",\n           \"7\\tBangladesh Bangladesh\\t163 220 762\\t144 000\\t1 113\",\n                           \"8\\t Bahrein\\t1 442 659[1]\\t665\\t1 035\",\n                                 \"9\\t Barbados\\t279 254\\t431\\t647\",\n                            \"10\\t Taiwan\\t22 894 384\\t35 980\\t636\",\n                                                          \"︀慴됨捈ݡ退\",\n                                                           \"\\001\"\n  )\n```\n:::\n\n\n# Remodelar dados para formato longo\n\nQuando os dados se encontram em formato largo é interessante fazer a remodelação dos dados para posteriormente criar um gráfico. Para isso utilizamos a função `pivot_longer()`.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-4_8a18519b30c11fda2038d0c4357d1af7'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\npepper <- \n  tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  ) \npepper %>% \n  pivot_longer(2:4,\n               names_to = \"epidemic\",\n               values_to = \"inc\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 24 × 3\n       t epidemic   inc\n   <dbl> <chr>    <dbl>\n 1     0 1        0.08 \n 2     0 2        0.001\n 3     0 3        0.001\n 4     7 1        0.13 \n 5     7 2        0.01 \n 6     7 3        0.001\n 7    14 1        0.78 \n 8    14 2        0.09 \n 9    14 3        0.01 \n10    21 1        0.92 \n# ℹ 14 more rows\n```\n:::\n:::\n\n\n## Visualização gráfica\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-5_2bbbef9ab59f361e78078dd8f9712fdb'}\n\n```{.r .cell-code}\npepper %>% \n  pivot_longer(2:4,\n               names_to = \"epidemic\",\n               values_to = \"inc\") %>% \nggplot(aes(t,inc, color = epidemic))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n# Anotações em gráficos\n\nPara adicionar textos aos gráficos em posições específicas podemos utilizar a função `annotate()` com os argumentos geom = \"text\", x= e y= para o posicionamento e o que deve ser adicionado em label =.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-6_961f99b633711e930735a46e18d01887'}\n\n```{.r .cell-code}\npepper %>% \n  pivot_longer(2:4,\n               names_to = \"epidemic\",\n               values_to = \"inc\") %>% \nggplot(aes(t,inc, color = epidemic))+\n  geom_point()+\n  geom_line()+\n  annotate(geom = \"text\",\n           x = 12,\n           y = 0.75,\n           label = \"1\")+\n annotate(geom = \"text\",\n           x = 25,\n           y = 0.75,\n           label = \"2\")+\n annotate(geom = \"text\",\n           x = 45,\n           y = 0.75,\n           label = \"3\")+\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ultima linha para retirar a legenda do gráfico e evitar a redundância\n```\n:::\n\n\n# Tabela de Contingência\n\nPara contabilizar o número de observaçõs de detrminado dado podemos utilizar a função `count()` ou `tabyl()` do pacote janitor.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-7_2740437dd9f5f473b544d946b6a9e7ba'}\n\n```{.r .cell-code}\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\n# formato longo\ncr %>%  \n  count(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  region zone             n\n  <chr>  <chr>        <int>\n1 Oromia Bale            30\n2 Oromia Ilu AbaBora     45\n3 Oromia Jimma           45\n4 Oromia West Wellega    45\n5 SNNPR  Bench Maji      45\n6 SNNPR  Gedio           45\n7 SNNPR  Keffa           45\n8 SNNPR  Sheka           45\n9 SNNPR  Sidama          60\n```\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n\n# formato largo\ncr %>% \n  tabyl(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n region Bale Bench Maji Gedio Ilu AbaBora Jimma Keffa Sheka Sidama West Wellega\n Oromia   30          0     0          45    45     0     0      0           45\n  SNNPR    0         45    45           0     0    45    45     60            0\n```\n:::\n\n```{.r .cell-code}\n# formato longo\ncr %>% \n  tabyl(zone, region)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         zone Oromia SNNPR\n         Bale     30     0\n   Bench Maji      0    45\n        Gedio      0    45\n  Ilu AbaBora     45     0\n        Jimma     45     0\n        Keffa      0    45\n        Sheka      0    45\n       Sidama      0    60\n West Wellega     45     0\n```\n:::\n:::\n\n\n# Visualização\n\nPara criação de um gráfico de barras utilizamos a função `geom_col()`. Para visualização dos grupos lado a lado utilizamos position = \"dodge2\", já para visualização empilhada utilizamos position = \"stack\".\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-8_391d19b798c3aaf7d1e380c074993d82'}\n\n```{.r .cell-code}\nlibrary(ggthemes)\ncr %>%  \n  count(farm_management, cultivar) %>% \n  ggplot(aes(cultivar, n, fill = farm_management,\n             label = n))+\n  geom_col(position = \"dodge2\")+\n  scale_fill_canva()+\n  theme_bw()+\n  theme(strip.text.x = element_blank(),\nlegend.position = \"top\") +\n  geom_text(position = position_dodge(width = 1))+\n  facet_wrap(~cultivar, scales = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n# Gráfico barra de erro\n\nPara criar um gráfico de barra de erro utilizamos a função `geom_errobar()`. Devemos construir antes dessa função uma camada com os dados de média e desvio padrão do conjunto de dados.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-9_307340cf8a6b0ebf3347e3e15f574f7e'}\n\n```{.r .cell-code}\nlibrary(gsheet)\n\nmg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\nmg %>% \n  group_by(trat) %>% \n  summarise (mean_comp = mean(comp),\n             sd_comp = sd(comp)) %>% \n  ggplot(aes(trat,mean_comp))+\n  #geom_col(fill = \"steelblue\", width = 0.5)+\n  geom_point(size = 3)+\n  ylim(0,20)+\ngeom_errorbar(aes(ymin = mean_comp - sd_comp,\n                  ymax = mean_comp + sd_comp),\n             width = 0.02)+\n  #para adicionar * de estatisticamente diferente\n  annotate(geom = \"text\",\n           x = 1, y = 17.5,\n           label = \"*\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmg %>% \n  ggplot(aes(trat,comp))+\n  geom_jitter(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}